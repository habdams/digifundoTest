openapi: 3.0.0
servers:
  - description: Digifundo server
    url: https://localhost:4000
  
  - description: Digifundo second server
    url: https://localhost:5000
info:
  version: "1.0.0"
  title: Digifundo
  description: >-
    The dev server fot the digifundo application.
security:
  - application:
      - read
      - write
paths:
  /signup:
    post:
      summary: User Signup path
      description: >-
        This path is used by IT teams to onboard users by registering them.
      responses:
        '201':
          description: User is successfully regsitered 
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id: 
                    type: string 
                    example: 1ed1acba-43aa-3e7d-8a18-ee91b3c57a0f

                  user_name:
                    type: string 
                    example: Neeraj Pandey 
                  
                  user_email:
                    type: string
                    example: neerajemail@email.com 
                  
                  user_gov_id:
                    type: string 
                    example: '1020119981910'
        '422':
          description: User already exists
          content: 
            application/json:
              schema:
                type: object 
                properties:
                  error_message: 
                    type: string 
                    example: User with this email address already exists in the database.   
      requestBody:
        description: User registered
        required: true 
        content:
          application/json:
            schema:
              type: object 
              properties: 
                user_password:
                  type: string 
                user_reconfirm_password:
                  type: string 
                user_name:
                  type: string 
                user_email: 
                  type: string 
                user_gov_id:  
                  type: string 

  /login:
    post:
      summary: User Sign in path
      description: >-
        This path is used by users to authenticate themselves on the Digifundo platform
      responses:
        '200':
          description: User successfully logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id: 
                    type: string 
                    example: 1ed1acba-43aa-3e7d-8a18-ee91b3c57a0f

                  user_name:
                    type: string 
                    example: Neeraj Pandey 
                  
                  user_email:
                    type: string
                    example: neerajemail@email.com 
                  
                  user_gov_id:
                    type: string 
                    example: '1020119981910'
        '404':
          description: User not found
          content: 
            application/json:
              schema:
                type: object 
                properties:
                  error_message: 
                    type: string 
                    example: User with this email address does not exists in the database.   

        '401':
          description: Incorrect email/password 
          content:
            application/json:
              schema: 
                type: object 
                properties: 
                  error_message:
                    type: string 
                    example: THe entered password or email address is incorrect!
              
        '5XX':
          description: Internal Server Error
          content: 
            application/http-problems: {}

      requestBody:
        description: User logged in
        required: true 
        content:
          application/json:
            schema:
              type: object 
              properties: 
                user_email: 
                  type: string 
                user_password:
                  type: string 
components:
  schemas: 
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'http://localhost:4000/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources